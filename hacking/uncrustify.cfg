# Configuration for Uncrustify 0.60. Coding style for Fuse emulator.

# File options
newlines = lf               # The type of line endings (auto/lf/crlf/cr)
input_tab_size = 8          # The original size of tabs in the input
output_tab_size = 8         # The size of tabs in the output
code_width = 80             # Try to limit code width to 80 number of columns
utf8_force = true           # Force the output encoding to UTF-8
utf8_bom = remove           # Control what to do with the UTF-8 BOM

# Indenting
indent_columns = 2          # The number of columns to indent per level
indent_with_tabs = 0        # Indent with spaces only
indent_col1_comment = true  # Indent comments found in first column

# Operators
sp_arith = add              # Space around arithmetic operator '+', '-', '/', '*', etc 
sp_assign = add             # Space around assignment operator '=', '+=', etc
sp_bool = add               # Space around boolean operators '&&' and '||'
sp_compare = add            # Space around compare operator '<', '>', '==', etc
sp_after_comma = add        # Space after ','

# Parentheses
sp_inside_paren = add       # Space inside '(' and ')'
sp_paren_paren = add        # Space between nested parens: '((' vs ') )'
sp_before_sparen = remove   # Space before '(' of 'if', 'for', 'switch', and 'while'
sp_inside_sparen = add      # Space inside if-condition '(' and ')'

# Square brackets
sp_before_squares = remove  # Space before '[]'

# Braces
nl_fdef_brace = add         # "int foo() {" vs "int foo()\n{"
nl_if_brace = remove        # "if () {" vs "if () \n {"
nl_brace_else = remove      # "} else" vs "} \n else" - cuddle else
nl_else_brace = remove      # "else {" vs "else \n {"
nl_for_brace = remove       # "for () {" vs "for () \n {"
nl_while_brace = remove     # "while () {" vs "while () \n {"
nl_do_brace = remove        # "do {" vs "do \n {"
nl_brace_while = remove     # "} while" vs "} \n while" - cuddle while
nl_switch_brace = remove    # "switch () {" vs "switch () \n {"
nl_enum_brace = remove      # "enum {" vs "enum \n {"
nl_union_brace = remove     # "union {" vs "union \n {"
nl_struct_brace = remove    # "struct {" vs "struct \n {"
sp_else_brace = force       # Space between 'else' and '{' if on the same line
sp_brace_else = force       # space between '}' and 'else' if on the same line

# Casts
sp_after_cast = remove           # "(int) a" vs "(int)a"
sp_inside_paren_cast = remove    # Spaces inside cast parens

# Pointers
sp_before_ptr_star = add         # Space before pointer star '*'
sp_between_ptr_star = remove     # Space between pointer stars '*'
sp_after_ptr_star = remove       # Space after pointer star '*', if followed by a word.

# Functions
sp_func_proto_paren = remove     # "int foo ();" vs "int foo();"
sp_func_def_paren = remove       # "int foo (){" vs "int foo(){"
sp_func_call_paren = remove      # "foo (" vs "foo("
sp_inside_fparens = remove       # Space inside empty function '()'
sp_inside_fparen = add           # Space inside function '(' and ')'
nl_func_type_name = add          # Newline between return type and function name in a function definition
nl_func_proto_type_name = remove # Newline between return type and function name in a prototype

# Comments
cmt_indent_multi = false       # Disable all multi-line comment changes
cmt_cpp_to_c = true            # Change cpp-comments into c-comments
cmt_cpp_group = true           # Group cpp-comments that look like they are in a block

# Strict options
#sp_inside_paren = force       # Space inside '(' and ')'
#sp_inside_sparen = force      # Space inside if-condition '(' and ')'
#sp_inside_square = add        # Space inside a non-empty '[' and ']'
#sp_arith = force              # Space around arithmetic operator '+', '-', '/', '*', etc 
#sp_assign = force             # Space around assignment operator '=', '+=', etc
#sp_bool = force               # Space around boolean operators '&&' and '||'
#sp_compare = force            # Space around compare operator '<', '>', '==', etc
#sp_after_comma = force        # Space after ','
#cmt_c_group = true            # Whether to group c-comments that look like they are in a block
#cmt_width = 80                # Try to wrap comments at 80 columns
#cmt_star_cont = false         # Put a star on subsequent comment lines
#cmt_sp_before_star_cont = 3   # Number of spaces to insert at the start of subsequent comment lines
